plugins {
	id "fabric-loom" version "1.1-SNAPSHOT"
    id 'io.freefair.lombok' version '6.6.2'
}

loom {
    accessWidenerPath = file("src/main/resources/skylands.accesswidener")
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    //mavenLocal()
	maven {
		url "https://api.modrinth.com/maven"
		content { includeGroup "maven.modrinth" }
	}
	maven { url "https://maven.nucleoid.xyz" }
	maven { url "https://maven.awakenedredstone.com" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
	maven { url "https://ladysnake.jfrog.io/artifactory/mods" }
	maven { url = "https://jitpack.io" }

    maven { url "https://maven.wispforest.io" } //Temporary
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-api:${project.cca}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cca}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca}"

	modImplementation include("eu.pb4:sgui:${project.sgui}")
	modImplementation include("xyz.nucleoid:fantasy:${project.fantasy}")
	modImplementation include("maven.modrinth:nota:${project.nota}")
	modImplementation include("eu.pb4:placeholder-api:${project.papi}")
	modImplementation include("xyz.nucleoid:server-translations-api:${project.sta}")
    modImplementation include("xyz.nucleoid:stimuli:${project.stimuli}")
    modImplementation include("me.lucko:fabric-permissions-api:${project.fpa}")
    modImplementation include("eu.pb4:common-protection-api:${project.cpa}")
    modImplementation include("eu.pb4:common-economy-api:${project.cea}")

    modImplementation "com.awakenedredstone:cbserverconfig:${project.cbsc}"
    annotationProcessor(modCompileOnly "io.wispforest:owo-lib:0.10.3+1.19.4") //Temporary

    include(implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:${project.mixin_extras}")))
}

processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
    //noinspection GroovyAssignabilityCheck
    it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}
